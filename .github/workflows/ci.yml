name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: remix-prisma-starter-test
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - uses: marocchino/tool-versions-action@v1
        id: versions

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.versions.outputs.nodejs }}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: |
          npm i
          npx playwright install

      - name: Lint
        run: |
          npm run prisma:generate
          npm run lint
          npm run ts-check

      - name: E2E
        run: |
          npm run prisma:dbpush
          npm run build
          npm run test:ci
        env:
          SECRET_KEY_BASE: supersecret42069
          DATABASE_PRISMA_URL: postgres://postgres:postgres@localhost:5432/remix-prisma-starter-test
          DATABASE_URL_NON_POOLING: postgres://postgres:postgres@localhost:5432/remix-prisma-starter-test
          SECURE_AUTH_COOKIE: false
          NODE_ENV: production
          PORT: 3001
